name: E2E Tests (Playwright)

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  # Allow manual trigger for testing
  workflow_dispatch:

env:
  NODE_VERSION: "20.x"
  PNPM_VERSION: "9"

jobs:
  # =============================================================================
  # E2E TESTS - Playwright Browser Testing
  # =============================================================================
  e2e-tests:
    name: E2E Tests on ${{ matrix.browser }}
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps ${{ matrix.browser }}

      - name: Run E2E tests
        run: pnpm test:e2e --project=${{ matrix.browser }}
        env:
          # E2E environment variables
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_APP_URL: http://localhost:3000
          # Playwright configuration
          CI: true
          PLAYWRIGHT_HEADED: false

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: playwright-report/
          retention-days: 14

      - name: Upload test videos
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-videos-${{ matrix.browser }}
          path: test-results/
          retention-days: 7

  # =============================================================================
  # E2E SMOKE TESTS - Critical User Journeys (Production)
  # =============================================================================
  e2e-smoke-production:
    name: Smoke Tests (Production)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    # Only run on main branch pushes
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright Chromium
        run: pnpm exec playwright install --with-deps chromium

      - name: Run smoke tests against production
        run: pnpm test:e2e --grep @smoke --project=chromium
        env:
          # Production URL for smoke tests
          NEXT_PUBLIC_APP_URL: https://primariatawork.vercel.app
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          CI: true

      - name: Upload smoke test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-test-report
          path: playwright-report/
          retention-days: 30

      - name: Notify on failure
        if: failure()
        run: |
          echo "üö® Production smoke tests failed!"
          echo "Check artifacts for detailed report"

  # =============================================================================
  # VISUAL REGRESSION - Screenshot Comparison (Optional)
  # =============================================================================
  visual-regression:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    # Only run on PRs
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for comparison

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright Chromium
        run: pnpm exec playwright install --with-deps chromium

      - name: Run visual regression tests
        run: pnpm test:e2e --grep @visual --project=chromium --update-snapshots
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_APP_URL: http://localhost:3000
          CI: true

      - name: Upload visual diffs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: visual-regression-diffs
          path: test-results/
          retention-days: 7

  # =============================================================================
  # E2E STATUS CHECK - All Jobs Summary
  # =============================================================================
  e2e-status:
    name: E2E Status Check
    runs-on: ubuntu-latest
    needs: [e2e-tests]
    if: always()

    steps:
      - name: Check E2E status
        run: |
          if [[ "${{ needs.e2e-tests.result }}" != "success" ]]; then
            echo "‚ùå E2E Tests failed!"
            echo "E2E Tests: ${{ needs.e2e-tests.result }}"
            exit 1
          else
            echo "‚úÖ E2E Tests passed!"
          fi

      - name: Comment on PR
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ needs.e2e-tests.result }}' === 'success' ? '‚úÖ Passed' : '‚ùå Failed';
            const body = `## E2E Test Results\n\n${status}\n\nCheck the [workflow run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
